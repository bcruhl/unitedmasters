@import "./variables.css";
@import "./fonts.css";

HTML, BODY {
  min-height: 100vh;
  width: 100vw;
  padding: 0;
  margin: 0;
  overflow: auto;
  background-color: $backgroundGray;
  color: $defaultFontColor;
  font-family: 'ProximaNova';

  H1 {
    overflow: hidden;
    visibility: hidden;
    height: 0;
    padding: 0;
    margin: 0;
  }

  HEADER {
    height: $headerHeight;
    background-color: $white;
    margin: 0;
    border-bottom: 1px solid $black;

    & > IMG {
      position: relative;
      top: 50%;
      transform: translateY(-50%);
      left: 1em;
      height: 70%;
    }
  }

  $treePadding: .5em;
  .tree-container {
    margin: auto auto;
    margin-top: $sectionMargin;
    padding: $treePadding;
    min-height: 100vh;
    max-width: 100vw;
    overflow: auto;
    height: calc(100vh - $headerHeight - ($sectionMargin * 4));
    min-width: 100vw;
    background-color: $sectionBackground;
    border-radius: $treePadding;
    border-top: 1px solid $black;
    position: relative;
    padding: $treePadding;

    & > div {
      position: sticky;
      top: calc($treePadding * 2);
      left: $treePadding;
      font-weight: bold;
      opacity: 0.6;
    }

    ul.root {
      width: 110vw;
    }

    ul {
      padding-top: 20px; 
      position: relative;
      transition: all 0.5s;

      /* Add downward connectors from parents */
      ul::before{
        content: '';
        position: absolute; 
        top: 0; 
        left: 50%;
        border-left: 1px solid $nodeBorderColor;
        width: 0; height: 20px;
      }
    }

    li {
      float: left; 
      text-align: center;
      list-style-type: none;
      position: relative;
      padding: 20px 5px 0 5px;
      
      transition: all 0.5s;

      /* Use ::before and ::after to draw the connectors */
      &::before, 
      &::after {
        content: '';
        position: absolute; 
        top: 0; 
        right: 50%;
        border-top: 1px solid $nodeBorderColor;
        width: 50%; height: 20px;
      }

      &::after {
        right: auto; left: 50%;
        border-left: 1px solid $nodeBorderColor;
      }

      /* We need to remove left-right connectors from elements without any siblings*/
      &:only-child::after, 
      &:only-child::before {
        display: none;
      }

      /* Remove space from the top of single children */
      &:only-child { padding-top: 0;}

      /* Remove left connector from first child and right connector from last child */
      &:first-child::before, 
      &:last-child::after {
        border: 0 none;
      }

      /* Adding back the vertical connector to the last nodes */
      &:last-child::before {
        border-right: 1px solid $nodeBorderColor;
        border-radius: 0 5px 0 0;
      }

      &:first-child::after{
        border-radius: 5px 0 0 0;
      }

      a {
        background-color: $white;
        border: 1px solid $nodeBorderColor;
        padding: 5px 10px;
        text-decoration: none;
        color: $black;
        font-family: ProximaNova;
        font-size: 11px;
        display: inline-block;
        border-radius: 5px;    

        /* node focus effects */
        & > div {
          text-align: left;
          max-height: 0;
          transition: max-height 0.25s ease-out;
          overflow: hidden;
        }

        &:focus {
          font-weight: bold;

          & > div {
            max-height: 500px;
            transition: max-height 0.6s ease-in;
            font-weight: normal;
          }     
        }
        
        /* Tree hover effects */
        /* Apply the hover effect the children */
        &:hover, 
        &:hover+ul li a {
          background: $nodeBackgroundHoverColor; 
          color: $black; 
          border: 1px solid $nodeBorderHoverColor;
        }

        /* Connector styles on hover */
        &:hover+ul li::after, 
        &:hover+ul li::before, 
        &:hover+ul::before, 
        &:hover+ul ul::before{
          border-color: $nodeBorderHoverColor;
        }
      }
    }
  }
}
